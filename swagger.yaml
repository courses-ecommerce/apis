openapi: 3.0.0
info:
  version: 1.0.0
  title: Web udemy APIs
  description: Web udemy APIs

servers:
  - url: http://localhost:3000/api
  - url: https://geny-e-learning.herokuapp.com/api
tags:
  - name: account
    description: apis liên quan đến tài khoản người dùng
  - name: login
    description: xác thực và uỷ quyền
  - name: admin user
    description: "quản lý tài khoản người dùng"
  - name: category
    description: "quản lý categories"
  - name: course
    description: apis liên quan đến khoá học
  - name: coupon
    description: apis liên quan đến mã giảm giá
  - name: payment
    description: apis liên quan đến thanh toán

# Basic authentication
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - student
            - teacher
            - admin
        refreshToken:
          type: string
        isActive:
          type: boolean
          default: true
      required:
        - email
        - password
    User:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/Account"
        fullName:
          type: string
        birthday:
          type: string
        gender:
          type: boolean
        phone:
          type: string
        avatar:
          type: string
      required:
        - "fullName"
    Verify:
      type: object
      properties:
        email:
          type: string
        code:
          type: string
        dateCreated:
          type: number
    Category:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        publish:
          type: boolean
          default: false
      required:
        - name
    Course:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        categories:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Category"
        thumbnail:
          type: string
        description:
          type: string
        language:
          type: string
        intendedLearners:
          type: string
        level:
          type: string
        targets:
          type: array
          items:
            type: string
        requirements:
          type: array
          items:
            type: string
        currentPrice:
          type: number
        originalPrice:
          type: number
        saleOff:
          type: number
        author:
          $ref: "#/components/schemas/User"
        sellNumber:
          type: string
        tags:
          type: array
          items:
            type: string
        publish:
          type: boolean
          default: false
      required:
        - name
        - thumbnail
        - author
    Rate:
      type: object
      properties:
        course:
          $ref: "#components/schemas/Course"
        author:
          $ref: "#components/schemas/User"
        rate:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        content:
          type: string
      required:
        - course
        - author
        - rate
    Comment:
      type: object
      properties:
        course:
          $ref: "#/components/schemas/Course"
        author:
          $ref: "#/components/schemas/User"
        replies:
          type: array
          items:
            type: object
            properties:
              author:
                $ref: "#/components/schemas/User"
              content:
                type: string
        content:
          type: string
    Chapter:
      type: object
      properties:
        course:
          $ref: "#components/schemas/Course"
        number:
          type: number
        name:
          type: string
    Lesson:
      type: object
      properties:
        chapter:
          $ref: "#components/schemas/Chapter"
        number:
          type: number
        title:
          type: string
        video:
          type: string
        image:
          type: string
        description:
          type: string
        saveIn:
          type: string
        publish:
          type: boolean
          default: false
    Coupon:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
        type:
          type: string
          enum:
            - percent
            - money
        apply:
          type: object
          properties:
            to:
              type: string
              enum:
                - author
                - all
                - category
                - new user
            value:
              type: array
              items:
                type: string
        amount:
          type: number
        startDate:
          type: string
        expireDate:
          type: string
        author:
          $ref: "#/components/schemas/User"
        maxDiscount:
          type: number
          default: Infinity
        minPrice:
          type: number
          default: 0
        number:
          type: number
          default: Infinity
      required:
        - code
        - title
        - type
        - apply
        - amount
    Invoice:
      type: object
      properties:
        _id:
          type: string
        transactionId:
          type: string
        user:
          $ref: "#/components/schemas/User"
        totalPrice:
          type: string
        status:
          type: string
      required:
        - _id
        - transactionId
        - user
        - totalPrice

  parameters:
    page:
      name: page
      in: "query"
      description: phân trang
      required: false
      schema:
        type: string
        default: "1"
    limit:
      name: limit
      in: "query"
      description: "giới hạn số lượng bản ghi"
      schema:
        type: string
        default: "10"

security:
  - bearerAuth: []

paths:
  /login:
    post:
      tags:
        - login
      summary: đăng nhập
      description: ""
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                keepLogin:
                  type: boolean
              required:
                - email
                - password
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  refreshToken:
                    type: string
                  token:
                    type: object
                    properties:
                      expiresIn:
                        type: string
                      accessToken:
                        type: string
                  role:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
  /login/google:
    post:
      tags:
        - login
      summary: Đăng nhập bằng tài khoản google
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
              required:
                - access_token
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  refreshToken:
                    type: string
                  token:
                    type: object
                    properties:
                      expiresIn:
                        type: string
                      accessToken:
                        type: string
                  role:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
  /login/logout:
    post:
      tags:
        - login
      summary: đăng xuất
      description: ""
      responses:
        200:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
  /login/refresh-token:
    post:
      tags:
        - login
      summary: lấy token mới
      description: ""
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
                - refresh_token
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  refreshToken:
                    type: string
                  token:
                    type: object
                    properties:
                      expiresIn:
                        type: string
                      accessToken:
                        type: string
                  role:
                    type: string
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"

  /accounts/verify:
    post:
      tags:
        - account
      summary: Gửi mã xác nhận tới email
      description: ""
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email

      responses:
        200:
          description: "ok"
        500:
          description: "SERVER ERROR"
  /accounts/signup:
    post:
      tags:
        - account
      summary: Đăng ký tài khoản
      description: ""
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                verifyCode:
                  type: string
                fullName:
                  type: string
                birthday:
                  type: string
                gender:
                  type: string
                phone:
                  type: string
              required:
                - email
                - password
                - verifyCode
                - fullName
      responses:
        200:
          description: "ok"
        500:
          description: "SERVER ERROR"
  /accounts/verify/forgot:
    post:
      tags:
        - account
      summary: Gửi mã xác thực để lấy lại mật khẩu
      description: ""
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email

      responses:
        200:
          description: "ok"
        500:
          description: "SERVER ERROR"
  /accounts/forgot-pw:
    post:
      tags:
        - account
      summary: Lấy lại mật khẩu
      description: ""
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                verifyCode:
                  type: string
              required:
                - email
                - password
                - verifyCode

      responses:
        200:
          description: "ok"
        401:
          description: "Mã xác nhận không hợp lệ."
        500:
          description: "SERVER ERROR"
  /accounts/change-pw:
    post:
      tags:
        - account
      summary: Đổi mật khẩu
      description: ""
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                oldPassword:
                  type: string
              required:
                - email
                - password
                - oldPassword

      responses:
        200:
          description: "ok"
        401:
          description: "tài khoản không tồn tại!"
        403:
          description: "mật khẩu không đúng"
        500:
          description: "SERVER ERROR"

  /categories:
    get:
      tags:
        - category
      summary: Lấy danh sách category và phân trang
      description: ""
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - name: name
          in: query
          schema:
            type: string
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Category"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
    post:
      tags:
        - category
      summary: Tạo mới category
      description: ""
      requestBody:
        description: "Thông tin category"
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Category"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
  /categories/{slug}:
    put:
      tags:
        - category
      summary: Cập nhật category
      description: ""
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: "form data"
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        200:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
    delete:
      tags:
        - category
      summary: Xoá category
      description: ""
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"

  /courses:
    post:
      tags:
        - course
      summary: Thêm khoá học mới
      description: ""
      requestBody:
        description: "Thông tin khoá học"
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                thumbnail:
                  type: string
                  format: binary
                categories:
                  type: array
                  items:
                    type: string
                description:
                  type: string
                introduction:
                  type: string
                currentPrice:
                  type: number
                originalPrice:
                  type: number
                tags:
                  type: array
                  items:
                    type: string
              required:
                - name
                - thumbnail
      responses:
        201:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
    get:
      tags:
        - course
      summary: Lấy danh sách khoá học và phân trang
      description: ""
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - name: sort
          in: query
          schema:
            type: string
            example: rating-asc
        - name: name
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
            example: web-development
        - name: tags
          in: query
          description: tag1-tag2-tag3
          schema:
            type: string
            example: nodejs-mongodb-reactjs
        - name: price
          in: query
          description: min-max
          schema:
            type: string
            example: 100000-500000
        - name: publish
          in: query
          schema:
            type: boolean
            example: true

      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  searchKey:
                    type: object
                    properties:
                      suggestion:
                        type: string
                      original:
                        type: string
                  totalCount:
                    type: object
                    properties:
                      total:
                        type: number
                  courses:
                    type: array
                    items:
                      $ref: "#/components/schemas/Course"

        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
  /courses/{slug}:
    put:
      tags:
        - course
      summary: Cập nhật khoá học
      description: ""
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string

                categories:
                  type: array
                  items:
                    type: string
                description:
                  type: string
                introduction:
                  type: string
                currentPrice:
                  type: number
                originalPrice:
                  type: number
                tags:
                  type: array
                  items:
                    type: string
                publish:
                  type: boolean
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                thumbnail:
                  type: string
                  format: binary
                categories:
                  type: array
                  items:
                    type: string
                description:
                  type: string
                introduction:
                  type: string
                currentPrice:
                  type: number
                originalPrice:
                  type: number
                tags:
                  type: array
                  items:
                    type: string
                publish:
                  type: boolean

      responses:
        200:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
    get:
      tags:
        - course
      summary: Lấy chi tiết khoá học theo slug
      description: ""
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
        500:
          description: "SERVER ERROR"
  /courses/{slug}/related:
    get:
      tags:
        - course
      summary: Lấy danh sách khoá học liên quan theo tags
      description: ""
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
        500:
          description: "SERVER ERROR"
  /courses/hot:
    get:
      tags:
        - course
      summary: Lấy danh sách khoá học hot (số lượng bán) (theo category or all)
      description: ""
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: number
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
        500:
          description: "SERVER ERROR"
  /courses/suggest:
    get:
      tags:
        - course
      summary: Lấy danh sách khoá học đề xuất dựa vào lịch sử tìm kiếm của người dùng
      description: ""
      parameters:
        - name: limit
          in: query
          schema:
            type: number
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
        500:
          description: "SERVER ERROR"
  /courses/{slug}/rate:
    get:
      tags:
        - course
      summary: Lấy danh sách khoá học đề xuất dựa vào lịch sử tìm kiếm của người dùng
      description: ""
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rate"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"

  /payment/checkout-cart:
    post:
      tags:
        - payment
      summary: ước tính chi phí của giỏ hàng
      description: ""
      requestBody:
        description: "Danh sách mã slug khoá học và mã giảm giá"
        content:
          application/json:
            schema:
              type: object
              properties:
                courses:
                  type: array
                  items:
                    type: object
                    properties:
                      slug:
                        type: string
                      coupon:
                        type: string
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    totalPrice:
                      type: number
                    data:
                      type: object
                      properties:
                        slug:
                          type: string
                        name:
                          type: string
                        category:
                          type: string
                        thumbnail:
                          type: string
                        amount:
                          type: number
                        currentPrice:
                          type: number
                        originalPrice:
                          type: number
                        saleOff:
                          type: number
                        author:
                          $ref: "#/components/schemas/User"
                        coupon:
                          type: object
                          properties:
                            message:
                              type: string
                            discountAmount:
                              type: number
                            code:
                              type: string
                            title:
                              type: string
                            type:
                              type: string
                            amount:
                              type: number
        500:
          description: "SERVER ERROR"
  /payment/checkout:
    post:
      tags:
        - payment
      summary: Ước tính giá và thanh toán mua khoá học
      description: ""
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                courses:
                  type: array
                  items:
                    type: object
                    properties:
                      slug:
                        type: string
                      coupon:
                        type: string

      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Coupon"
        500:
          description: "SERVER ERROR"
  /{gateway}/callback:
    get:
      tags:
        - payment
      summary: Trả về thông tin sau khi thanh toán
      description: ""
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      isSuccess:
                        type: boolean
                      message:
                        type: boolean
                      invoiceId:
                        type: boolean
                      transactionId:
                        type: boolean
                      amount:
                        type: boolean
                      orderInfo:
                        type: boolean
                  invoice:
                    $ref: "#/components/schemas/Invoice"

        500:
          description: "SERVER ERROR"

  /coupons:
    get:
      tags:
        - coupon
      summary: Lấy danh sách coupon và phân trang
      description: ""
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - name: active
          in: query
          schema:
            type: boolean
        - name: code
          in: query
          schema:
            type: string
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Coupon"
        500:
          description: "SERVER ERROR"
    post:
      tags:
        - coupon
      summary: Tạo mới coupon
      description: ""
      requestBody:
        description: "Thông tin coupon"
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/Coupon"
      responses:
        201:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
  /coupons/{code}:
    put:
      tags:
        - coupon
      summary: Cập nhật coupon
      description: ""
      parameters:
        - name: code
          in: path
          schema:
            type: string
          required: true
      requestBody:
        description: "Thông tin coupon"
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/Coupon"
      responses:
        200:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
    delete:
      tags:
        - coupon
      summary: Cập nhật coupon
      description: ""
      parameters:
        - name: code
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
    get:
      tags:
        - coupon
      summary: Lấy chi tiết coupon
      description: ""
      parameters:
        - name: code
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Coupon"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"

  # admin region
  /admin/users:
    get:
      security:
        - bearerAuth: []
      tags:
        - admin user
      summary: lấy danh sách tài khoản người dùng
      description: ""
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - name: email
          in: query
          description: ""
          schema:
            type: string
        - name: role
          in: query
          description: ""
          schema:
            type: string
        - name: sort
          in: query
          description: "example: ?sort=email_asc"
          schema:
            type: string
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        500:
          description: "SERVER ERROR"
    post:
      security:
        - bearerAuth: []
      tags:
        - admin user
      summary: tạo tài khoản người dùng mới
      description: ""
      requestBody:
        description: "form data"
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                fullName:
                  type: string
                birthday:
                  type: string
                gender:
                  type: boolean
                phone:
                  type: string
              required:
                - email
                - password
                - fullName

      responses:
        201:
          description: "ok"
        401:
          description: "Unauthorize"
        500:
          description: "SERVER ERROR"
    put:
      security:
        - bearerAuth: []
      tags:
        - admin user
      summary: cập nhật khoản người dùng
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description: id user
          schema:
            type: string
      requestBody:
        description: "form data"
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  properties:
                    password:
                      type: string
                    isActive:
                      type: boolean
                user:
                  type: object
                  properties:
                    fullName:
                      type: string
                    birthday:
                      type: string
                    gender:
                      type: boolean
                    phone:
                      type: string
      responses:
        200:
          description: "ok"
        401:
          description: "unauthorize"
        500:
          description: "SERVER ERROR"
    delete:
      security:
        - bearerAuth: []
      tags:
        - admin user
      summary: xoá tài khoản người dùng
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description: id user
          schema:
            type: string
      responses:
        200:
          description: "ok"
        401:
          description: "unauthorize"
        500:
          description: "SERVER ERROR"
